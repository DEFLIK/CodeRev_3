apiVersion: apps/v1
kind: Deployment
metadata:
  name: coderev-deployment
  namespace: coderev
  labels:
    app: coderev
    env: Production
    owner: BuaCodeRev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: coderev-pod
  template:
    metadata:
      labels:
        app: coderev-pod
    spec:
      containers:
        - name: coderev-container
          image: hub.66bit.ru/urfu/coding-interview-3458:latest
          ports:
            - name: pod-port
              containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Production
      imagePullSecrets:
        - name: coderevcred
---
apiVersion: v1
kind: Service
metadata:
  name: coderev-service
  namespace: coderev
  labels:
    env: Production
    owner: BuaCodeRev
spec:
  selector:
    app: coderev-pod
  ports:
    - name: app-listener
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: coderev-ingress
  annotations:
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: "coderev.stk8s.66bit.ru"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: coderev-service
                port:
                  number: 80
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: coderev-postgres
  namespace: coderev
spec:
  selector:
    matchLabels:
      app: coderev-postgres
  serviceName: "coderev-postgres"
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: coderev-postgres
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: coderev-postgres
          image: postgres:15-alpine
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: coderev-postgres
              mountPath: /var/lib/postgresql/data
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgresql
            - name: POSTGRES_DB
              value: CodeRev.Database
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
      initContainers:
        - name: coderev-rights-to-data
          image: busybox
          command: ["sh","-c","mkdir -p /var/lib/postgresql/data/pgdata && chown -R 999:999 /var/lib/postgresql/data/pgdata"]
          securityContext:
            runAsUser: 0
            privileged: true
          volumeMounts:
            - name: coderev-postgres
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: coderev-postgres
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "standard"
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: coderev-postgres-service
  namespace: coderev
  labels:
    app: coderev-postgres-service
spec:
  selector:
    app: coderev-postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: coderev-mongodb
  namespace: coderev
spec:
  selector:
    matchLabels:
      app: coderev-mongodb
  serviceName: "coderev-mongodb"
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: coderev-mongodb
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: coderev-mongodb
          image: mongo:4.0.17
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          volumeMounts:
            - name: coderev-mongodb
              mountPath: /var/lib/mongodb/data
          env:
            - name: "MONGO_INITDB_DATABASE"
              value: "TrackerDB"
            - name: "MONGO_INITDB_ROOT_USERNAME"
              value: "root"
            - name: "MONGO_INITDB_ROOT_PASSWORD"
              value: "password"
  volumeClaimTemplates:
    - metadata:
        name: coderev-mongodb
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "standard"
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: coderev-mongodb-service
  namespace: coderev
  labels:
    app: coderev-mongodb-service
spec:
  clusterIP: None
  selector:
    app: coderev-mongodb
  ports:
    - port: 27017
      targetPort: 27017
